{"version":3,"sources":["comoponents/MealForm.js","mock-data.js","comoponents/RestaurantForm.js","comoponents/DishForm.js","comoponents/ConfirmationForm.js","comoponents/BaseForm.js","App.js","serviceWorker.js","index.js"],"names":["MealForm","onChange","e","props","handleMealSelection","target","value","onNumberChange","handlePeopleCount","this","mealOptions","numbers","mealSelections","map","meal","i","key","peopleSelector","className","required","disabled","selected","Component","dishes","RestaurantForm","handleRestaurantSelection","restaurantList","filter","dish","availableMeals","includes","selectedMeal","item","restaurant","restaurantSelections","Set","DishForm","handleAddDish","selectedRestaurant","selectedDishes","RestaurantDishList","name","quantitySelector","number","shape","icon","onClick","handleAddInput","ConfirmationForm","people","index","quantity","BaseForm","state","step","errorOne","errorTwo","nextStep","setState","prevStep","prevState","val","inputComplete","dishesArray","length","size","dishQuantity","dishSelectorInputs","backButton","type","validateInputs","handleRemoveInput","submit","handleSubmit","console","log","errorMessageOne","errorMessageTwo","multiStepper","renderSteps","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ceb63eca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './MealForm.css';\n\nexport default class MealForm extends Component {\n  onChange = e => {\n    this.props.handleMealSelection(e.target.value);\n  };\n\n  onNumberChange = e => {\n    this.props.handlePeopleCount(e.target.value);\n  };\n\n  render() {\n    const { mealOptions, numbers } = this.props;\n\n    const mealSelections = mealOptions.map((meal, i) => (\n      <option key={i} value={meal}>\n        {meal}\n      </option>\n    ));\n\n    const peopleSelector = numbers.map((e, i) => (\n      <option key={i} value={e}>\n        {e}\n      </option>\n    ));\n\n    return (\n      <>\n        <h3 className='meal'>Please Select a Meal</h3>\n        <select className= 'meal-selector' required onChange={this.onChange}>\n        <option disabled='disabled' selected>**Select an Restaurant**</option>\n          {mealSelections}\n        </select>\n        <br />\n        <h3>Please Select Number of Diners</h3>\n        <br />\n        <select required onChange={this.onNumberChange}>\n          {peopleSelector}\n        </select>\n        <br />\n      </>\n    );\n  }\n}\n","\nexport const dishes = [\n    {\n      \"id\": 1,\n      \"name\": \"Chicken Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Ham Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Cheese Burger\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Fries\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Egg Muffin\",\n      \"restaurant\": \"Mc Donalds\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Burrito\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Tacos\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Quesadilla\",\n      \"restaurant\": \"Taco Bell\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 9,\n      \"name\": \"Steak\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 10,\n      \"name\": \"Yakitori\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 11,\n      \"name\": \"Nankotsu\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Piman\",\n      \"restaurant\": \"BBQ Hut\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 13,\n      \"name\": \"Vegan Bento\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\"]\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Coleslaw Sandwich\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 15,\n      \"name\": \"Grilled Sandwich\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"breakfast\"]\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Veg. Salad\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 17,\n      \"name\": \"Fruit Salad\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Corn Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 19,\n      \"name\": \"Tomato Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 20,\n      \"name\": \"Minestrone Soup\",\n      \"restaurant\": \"Vege Deli\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 21,\n      \"name\": \"Pepperoni Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 22,\n      \"name\": \"Pepperoni Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 23,\n      \"name\": \"Hawaiian Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 24,\n      \"name\": \"Seafood Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 25,\n      \"name\": \"Deep Dish Pizza\",\n      \"restaurant\": \"Pizzeria\",\n      \"availableMeals\": [\"dinner\"]\n    },\n    {\n      \"id\": 26,\n      \"name\": \"Chow Mein\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Mapo Tofu\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 28,\n      \"name\": \"Kung Pao\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Wontons\",\n      \"restaurant\": \"Panda Express\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 30,\n      \"name\": \"Garlic Bread\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"breakfast\", \"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 31,\n      \"name\": \"Ravioli\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 32,\n      \"name\": \"Rigatoni Spaghetti\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    },\n    {\n      \"id\": 33,\n      \"name\": \"Fettucine Pasta\",\n      \"restaurant\": \"Olive Garden\",\n      \"availableMeals\": [\"lunch\", \"dinner\"]\n    }\n  ]\n\n","import React, { Component } from 'react';\nimport { dishes } from '../../src/mock-data';\nimport './RestaurantForm.css';\n\nexport default class RestaurantForm extends Component {\n  onChange = e => {\n    this.props.handleRestaurantSelection(e.target.value);\n  };\n\n  render() {\n    const availableRestaurants = dishes.filter(dish => dish.availableMeals.includes(this.props.selectedMeal));\n    const restaurantList = availableRestaurants.map(item => item.restaurant);\n    const finalRestaurantList = [...new Set(restaurantList)];\n\n    const restaurantSelections = finalRestaurantList.map((restaurant, i) => (\n      <option key={i} value={restaurant}>\n        {restaurant}\n      </option>\n    ));\n\n    return (\n      <>\n        <h3>Please Select a Restaurant</h3>\n        <select className='restaurant-selector'required onChange={this.onChange}>\n        <option disabled='disabled' selected>**Select an Restaurant**</option>\n          {restaurantSelections}\n        </select>\n        <br />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { dishes } from '../../src/mock-data';\nimport './DishForm.css';\n\nexport default class DishForm extends Component {\n  onChange = e => {\n    this.props.handleAddDish(e.target.value);\n  };\n\n  onNumberChange = e => {\n    /**\n     * Commented to allow the app to continue to Step 4.\n     */\n    // this.props.handleQuantity(e.target.value);\n  };\n\n  render() {\n    const { selectedRestaurant, selectedDishes, numbers } = this.props;\n\n    const dishesList = dishes.filter(dish => dish.restaurant.includes(selectedRestaurant));\n    const filteredDishesList = dishesList.map(item => item.name);\n\n    const RestaurantDishList = filteredDishesList.map((dish, i) => (\n      <option key={i} value={dish}>\n        {dish}\n      </option>\n    ));\n\n    const quantitySelector = numbers.map((number, i) => (\n      <option key={i} value={number}>\n        {number}\n      </option>\n    ));\n\n    return (\n      <>\n        {selectedDishes.map((item, i) => (\n          <div className='dishes' key={i}>\n            <select className='dish' required key={`${item}-${i}`} onChange={this.onChange}>\n              {RestaurantDishList}\n            </select>\n            <select required key={i++} onChange={this.onNumberChange}>\n              {quantitySelector}\n            </select>\n          </div>\n        ))}\n        <br />\n        <Button className='add-button' shape='circle' icon='plus' onClick={() => this.props.handleAddInput()} />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class ConfirmationForm extends Component {\n  render() {\n    const { selectedDishes, selectedRestaurant, selectedMeal, people } = this.props;\n    const dishes = selectedDishes\n      .filter(value => value.dish !== '')\n      .map((dish, index) => {\n        return (\n          <div key={index}>\n            <h2>{`Dish: ${dish.dish}`}</h2>\n            <h2>{`Quantity: ${dish.quantity}`}</h2>\n          </div>\n        );\n      });\n\n    return (\n      <>\n        <h2>{`Meal: ${selectedMeal}`}</h2>\n        <br />\n        <h2>{`People: ${people}`}</h2>\n        <br />\n        <h2>{`Restaurant: ${selectedRestaurant}`}</h2>\n        <br />\n        {dishes}\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport MealForm from './MealForm';\nimport RestaurantForm from './RestaurantForm';\nimport DishForm from './DishForm';\nimport ConfirmationForm from './ConfirmationForm';\nimport { Button } from 'antd';\nimport './BaseForm.css';\n\nexport default class BaseForm extends Component {\n  state = {\n    numbers: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    step: 1,\n    selectedMeal: '',\n    people: 0,\n    selectedRestaurant: '',\n    selectedDishes: [{ dish: '', quantity: 0 }],\n    errorOne: false,\n    errorTwo: false\n  };\n\n  /** Proceed to next step */\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({ step: step + 1 });\n  };\n\n  /** Go back to previous step */\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({ step: step - 1 });\n  };\n\n  handleMealSelection = value => {\n    this.setState({ selectedMeal: value });\n  };\n\n  handlePeopleCount = value => {\n    this.setState({ people: value });\n  };\n\n  handleRestaurantSelection = value => {\n    this.setState({ selectedRestaurant: value });\n  };\n\n  handleAddInput = () => {\n    this.setState(prevState => ({\n      selectedDishes: [...prevState.selectedDishes, { dish: '', quantity: 0 }]\n    }));\n  };\n\n  /**\n   * This part (Step 3) gave me some trouble.\n   */\n  handleAddDish = val => {\n    this.setState(prevState => ({\n      selectedDishes: [...prevState.selectedDishes, { dish: val, quantity: 0 }]\n    }));\n  };\n\n  /**\n   * Couldn't quite get this part to work so I commented it to allow\n   * the app to continue to step 4.\n   */\n  // handleQuantity = (val) => {\n  //   console.log('val', val)\n  //   this.setState(prevState => ({\n  //     selectedDishes: [...prevState.selectedDishes, { dish: '', quantity: val }]\n  //   }));\n  // }\n\n  /** Input Validation */\n  validateInputs() {\n    const { step, selectedMeal, people, selectedRestaurant, selectedDishes } = this.state;\n\n    const inputComplete = () => {\n      this.setState({ errorOne: false });\n      this.setState({ errorTwo: false });\n      this.nextStep();\n    };\n\n    const dishesArray = selectedDishes.map(dish => dish.dish);\n\n    switch (step) {\n      case 1:\n        return selectedMeal && people ? inputComplete() : this.setState({ errorOne: true });\n      case 2:\n        return !selectedRestaurant ? this.setState({ errorOne: true }) : inputComplete();\n      case 3:\n        if (!selectedDishes.length) {\n          return this.setState({ errorOne: true });\n        } else if (new Set(dishesArray).size !== dishesArray.length) {\n          return this.setState({ errorTwo: true });\n        } else {\n          return inputComplete();\n        }\n      default:\n        return '';\n    }\n  }\n\n  renderSteps() {\n    const {\n      step,\n      numbers,\n      selectedMeal,\n      people,\n      selectedRestaurant,\n      selectedDishes,\n      dishQuantity,\n      dishSelectorInputs,\n      index\n    } = this.state;\n\n    const backButton = (\n      <Button className='nav-button' type='primary' onClick={(step === 2) | 3 | 4 && this.prevStep}>\n        Back\n      </Button>\n    );\n\n    switch (step) {\n      case 1:\n        const mealOptions = ['breakfast', 'lunch', 'dinner'];\n        return (\n          <>\n            <MealForm\n              handleMealSelection={this.handleMealSelection}\n              handlePeopleCount={this.handlePeopleCount}\n              mealOptions={mealOptions}\n              numbers={numbers}\n            />\n            <Button className='nav-button' type='primary' onClick={() => this.validateInputs(1)}>\n              Next\n            </Button>\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <RestaurantForm handleRestaurantSelection={this.handleRestaurantSelection} selectedMeal={selectedMeal} />\n            {backButton}\n            <Button className='nav-button' type='primary' onClick={() => this.validateInputs(2)}>\n              Next\n            </Button>\n          </>\n        );\n      case 3:\n        return (\n          <>\n            <DishForm\n              handleAddDish={this.handleAddDish}\n              handleAddInput={this.handleAddInput}\n              handleRemoveInput={this.handleRemoveInput}\n              selectedMeal={selectedMeal}\n              dishSelectorInputs={dishSelectorInputs}\n              selectedRestaurant={selectedRestaurant}\n              numbers={numbers}\n              index={index}\n              selectedDishes={selectedDishes}\n            />\n            {backButton}\n            <Button className='nav-button' type='primary' onClick={() => this.validateInputs(3)}>\n              Next\n            </Button>\n          </>\n        );\n      case 4:\n        return (\n          <>\n            <ConfirmationForm\n              submit={this.handleSubmit}\n              selectedMeal={selectedMeal}\n              people={people}\n              dishQuantity={dishQuantity}\n              selectedRestaurant={selectedRestaurant}\n              selectedDishes={selectedDishes}\n            />\n            {backButton}\n            <Button\n              className='nav-button'\n              type='primary'\n              onClick={() => console.log('Complete!', selectedMeal, people, selectedRestaurant, selectedDishes)}\n            >\n              Submit\n            </Button>\n          </>\n        );\n      default:\n        return '';\n    }\n  }\n\n  render() {\n    const { step, errorOne, errorTwo } = this.state;\n    const errorMessageOne = errorOne && <h3 className='error'>Please make sure to complete all inputs</h3>;\n\n    const errorMessageTwo = errorTwo && (\n      <>\n        <h3 className='error'>Please do not enter the same meal more than once</h3>\n        <br />\n        <h3 className='error'>Just enter dish selection once and increase the quantity</h3>\n      </>\n    );\n\n    const multiStepper = (\n      <div className='stepper'>\n        <Button type={step === 1 ? 'primary' : 'default'}>Step 1</Button>\n        <Button type={step === 2 ? 'primary' : 'default'}>Step 2</Button>\n        <Button type={step === 3 ? 'primary' : 'default'}>Step 3</Button>\n        <Button type={step === 4 ? 'primary' : 'default'}>Step 4</Button>\n      </div>\n    );\n\n    return (\n      <>\n        {multiStepper}\n        {this.renderSteps()}\n        {errorMessageOne}\n        {errorMessageTwo}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport BaseForm from './comoponents/BaseForm';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <BaseForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}